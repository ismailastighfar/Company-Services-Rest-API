{
    "openapi": "3.0.0",
    "info": {
        "title": "Services API",
        "description": "API to manage services in a company",
        "contact": {
            "name": "Astighfar Ismail",
            "email": "astighfar2000@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/services": {
            "get": {
                "tags": [
                    "Services"
                ],
                "summary": "Get a list of services",
                "description": "Returns a list of services based on the API key. You can sort, paginate, and select specific fields.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort the results by.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "direction",
                        "in": "query",
                        "description": "Sorting direction. 'asc' for ascending, 'desc' for descending.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated list of fields to be returned in the response.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "csv"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized. Invalid API key",
                        "content": {
                            "application/json": {
                                "schema": {},
                                "example": {
                                    "error": "Unauthorized. Invalid API key."
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Services"
                ],
                "summary": "Create a new service",
                "description": "Creates a new service with the provided data",
                "operationId": "store",
                "requestBody": {
                    "description": "Service data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Service"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Service created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Service"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "$ref": "#/components/schemas/ValidationError"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Service": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "location": {
                        "type": "string"
                    },
                    "contact_email": {
                        "type": "string"
                    },
                    "contact_phone": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "apiKey",
                "description": "Enter 'Bearer [api key]' as the value.",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}